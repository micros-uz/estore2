@model AddEditBookModel

@{
    ViewBag.Title = "Create new book";
}

<h2>Create</h2>

@using (Html.BeginForm(Model.Action, "Book", FormMethod.Post, new { role = "form", @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Book.BookId)
    @Html.HiddenFor(model => model.Book.ImageFile)
    @Html.HiddenFor(model => model.OldImageFile)
    @Html.HiddenFor(model => model.IsImageChanged);

    <div class="row">
        <div class="col-md-5">
            <div class="form-group">
                @Html.LabelFor(model => model.Book.Title)
                @Html.TextBoxFor(model => model.Book.Title, new { @class = "form-control", autofocus = "autofocus" })
                @Html.ValidationMessageFor(model => model.Book.Title)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Book.Year)
                @Html.TextBoxFor(model => model.Book.Year, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Book.Year)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Book.Pages)
                @Html.TextBoxFor(model => model.Book.Pages, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Book.Pages)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Book.ISBN)
                @Html.TextBoxFor(model => model.Book.ISBN, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Book.ISBN)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            <div class="form-group">
                @Html.LabelFor(model => model.Book.GenreId, "Genre")
                @Html.DropDownListFor(model => model.Book.GenreId, (SelectList)ViewBag.Genres, "--select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Book.GenreId)
            </div>
        </div>
        <div class="col-md-2" style="margin:25px 0px">
            <a role="button" data-toggle="modal" href="#addGenre" class="btn btn-primary">Add New</a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            <div class="form-group">
                @Html.LabelFor(model => model.Book.AuthorId, "Author")
                @Html.DropDownListFor(model => model.Book.AuthorId, (SelectList)ViewBag.Authors, "--select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Book.AuthorId)
            </div>
        </div>
        <div class="col-md-2" style="margin:25px 0px">
            <a role="button" data-toggle="modal" href="#addAuthor" class="btn btn-primary">Add New</a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            <div class="form-group">
                @Html.LabelFor(model => model.Book.Price)
                @Html.TextBoxFor(model => model.Book.Price, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Book.Price)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Book.Image)
                <div class="input-group">
                    <span class="input-group-btn">
                            <span class="btn btn-primary btn-file">
                                Browse&hellip; <input name="Book.Image" id="Book_Image" type="file">
                            </span>
                            @Html.TextBox("ImagePath","", new { @class = "form-control", style="width: 78%;" })
                    </span>                
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Book.Desc)
                @Html.TextAreaFor(model => model.Book.Desc, new { @class = "form-control", rows = "5" })
                @Html.ValidationMessageFor(model => model.Book.Desc)
            </div>
            <p>
                <input type="submit" class="btn btn-default" value="Save" />
            </p>
        </div>
        <div class="col-md-5">
            <img id="preview" src= "@Url.Action("Image", new { fileName = Model.Book.ImageFile})" alt="Image" width="150" height="200"/>
        </div>
    </div>
}

<div class="modal fade" id="addGenre" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">New Genre</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("_CreateGenre", new GenreFullModel())
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveGenre" onclick="saveNewGenre();">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addAuthor" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">New Author</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("_CreateAuthor", new AuthorModel())
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveAuthor" onclick="saveNewAuthor();">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index", new { id = Model.Book.GenreId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}